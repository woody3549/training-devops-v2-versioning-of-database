sudo: required

services:
    - docker

env:  
    global:
        - DOCKER_VERSION=1.12.3-0~trusty
        - DOCKER_COMPOSE_VERSION=1.7.0

before_install:  
    # list docker-engine versions
    - apt-cache madison docker-engine

    # upgrade docker-engine to specific version
    - sudo apt-get -o Dpkg::Options::="--force-confnew" install -y docker-engine=${DOCKER_VERSION}

    # reinstall docker-compose at specific version
    - sudo rm /usr/local/bin/docker-compose
    - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
    - chmod +x docker-compose
    - sudo mv docker-compose /usr/local/bin

script:  
    - docker version
    - docker-compose version

    - ls -lah

    # Build image
    - docker-compose up -d

    # List running containers
    - docker ps -a

    # Wait to databases start
    - sleep 20
    
    ## DEV
    
    # Chech the initial state
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;"
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;" | wc -l
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;" | wc -l | grep -q 1

    # Run Version 1 - on Database dev (related to contexts)
    - docker exec -it liquibase.global bash -c 'java -jar liquibase-3.4.2.jar --defaultsFile=r_dev_v1.properties update'

    # Check the modifications
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;"
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;" | grep -q DATABASECHANGELOG
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;" | grep -q DATABASECHANGELOGLOCK
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;" | grep -q person
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;" | wc -l | grep -q 8

    # Run Version 2 - on Database dev (related to contexts)
    - docker exec -it liquibase.global bash -c 'java -jar liquibase-3.4.2.jar --defaultsFile=r_dev_v2.properties update'

    # Check the modifications
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;"
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;" | grep -q state
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'state';"
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'state';" | wc -l
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;" | wc -l | grep -q 9

    # Run Version 3 - on Database dev (related to contexts)
    - docker exec -it liquibase.global bash -c 'java -jar liquibase-3.4.2.jar --defaultsFile=r_dev_v3.properties update'

    # Check the modifications
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;"
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "show tables;" | wc -l | grep -q 9
    - docker exec -it mysql.dev mysql -u theuser -pthepw devdb -e "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'state';"

    ## PRD

    # Chech the initial state
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;"
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;" | wc -l
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;" | wc -l | grep -q 1

    # Run Version 1 - on Database prd (related to contexts)
    - docker exec -it liquibase.global bash -c 'java -jar liquibase-3.4.2.jar --defaultsFile=r_prd_v1.properties update'

    # Check the modifications
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;"
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;" | grep -q DATABASECHANGELOG
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;" | grep -q DATABASECHANGELOGLOCK
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;" | wc -l | grep -q 7

    # Run Version 2 - on Database prd (related to contexts)
    - docker exec -it liquibase.global bash -c 'java -jar liquibase-3.4.2.jar --defaultsFile=r_prd_v2.properties update'

    # Check the modifications
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;"
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;" | grep -q state
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'state';"
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'state';" | wc -l
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;" | wc -l | grep -q 8

    # Run Version 3 - on Database prd (related to contexts)
    - docker exec -it liquibase.global bash -c 'java -jar liquibase-3.4.2.jar --defaultsFile=r_prd_v3.properties update'

    # Check the modifications
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;"
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "show tables;" | wc -l | grep -q 8
    - docker exec -it mysql.prd mysql -u theuser -pthepw prddb -e "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'state';"




    # Test PhpMyAdmin on Database dev
    - curl http://127.0.0.1:33081/ | grep -q devdb

    # Test PhpMyAdmin on Database prd
    - curl http://127.0.0.1:33082/ | grep -q prddb
